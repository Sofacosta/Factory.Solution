@{
  Layout = "_Layout";
}

@using Factory.Models
@model Factory.Models.Engineer


<h1>Engineer - @Html.DisplayFor(model => model.Name)</h1>
<hr>

<input type="button" class="btn btn-warning" value="Edit engineer" onclick="location.href='@Url.Action("Edit", new { id = Model.EngineerId })'">
<input type="button" class="btn btn-danger" value="Delete engineer" onclick="location.href='@Url.Action("Delete", new { id = Model.EngineerId })'">
<input type="button" class="btn btn-primary" value="Back to list of engineers" onclick="location.href='@Url.Action("Index")'">
<hr>
<input type="button" class="btn-dark" value="Add machine certification" onclick="location.href='@Url.Action("AddMachine", new { id = Model.EngineerId })'">

@if(@Model.JoinEntities.Count == 0)
{
  <p>@Html.DisplayFor(model => model.Name) is not certified to repair any machines.</p>
}
else
{
  <h3>@Html.DisplayFor(model => model.Name) is certified to repair:</h3>
  <ul>
  @foreach(EngineerMachine join in Model.JoinEntities)
  {
    <li><h4>@Html.ActionLink($"{join.Machine.Name}", "Details", "Machines", new { id = join.Machine.MachineId })</h4></li>
    @using (Html.BeginForm("DeleteMachine", "Engineers"))
    {
      @Html.Hidden("joinId", @join.EngineerMachineId)
      <input type="submit" class="btn btn-outline-danger btn-sm" value="Remove certification">
    }
  }
  </ul>
}